{"version":3,"sources":["utils/load-script.js","base/ace.js","utils/swagger-handle.js","pages/home.js","utils/copy.js","pages/base-data.js","pages/prefix.js","pages/project.js","router.js","pages/document.js","base/header.js","base/content.js","App.js","serviceWorker.js","index.js"],"names":["load","src","isAsync","Promise","resolve","reject","script","document","createElement","async","onload","onerror","body","appendChild","Ace","props","srcList","emp","forEach","a","LoadScript","then","setState","isLoadAce","catch","reason","console","error","state","React","forwardRef","render","element","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","this","window","ace","owner","editor","edit","setTheme","JavaScriptMode","require","Mode","session","setMode","tangideCompleter","identifierRegexps","getCompletions","pos","prefix","callback","length","autoCompleteData","name","value","caption","meta","type","score","setOptions","enableBasicAutocompletion","enableSnippets","enableLiveAutocompletion","addCompleter","commands","addCommand","bindKey","win","mac","exec","ele","getElementById","isFullScreen","mozIsFullScreen","webkitIsFullScreen","launchFullscreen","readOnly","getSession","setTabSize","on","e","getValue","initAce","id","style","width","height","position","lineHeight","fontSize","border","Component","pathList","swaggerHandle","res","Object","keys","paths","pathKey","pathData","methodKey","resData","methodData","responses","response","i","schema","getResData","data","properties","propKey","push","items","example","api","summary","path","sourceData","JSON5","stringify","JSON","method","toLocaleUpperCase","basePath","isOpen","tags","tag","Option","TextArea","Panel","TabPane","Search","useForm","form","useState","forceUpdate","useEffect","updateConfig","Axios","post","projectConfig","_id","mock","success","message","updateProjectConfig","errorMsg","className","layout","onFinish","values","onSearch","Item","placeholder","shouldUpdate","htmlType","color","onClick","confirm","title","content","icon","ExclamationCircleOutlined","okType","onOk","display","borderRadius","marginRight","backgroundColor","HandleBtn","drawer","setDrawer","urlForm","fileForm","dataList","setDataList","fileName","setFileName","tagNameList","stopPropagation","Swagger","url","swaggerData","spec","reader","FileReader","readAsText","file","parse","target","result","float","openDrawer","PlusCircleOutlined","ImportOutlined","danger","deleteAllInterface","DeleteOutlined","placement","destroyOnClose","forceRender","onClose","visible","footer","textAlign","param","isCheck","initSearch","confirmImport","defaultActiveKey","tab","GlobalOutlined","key","label","rules","required","UploadOutlined","showUploadList","beforeUpload","fileList","onChange","FileTextOutlined","map","index","header","indeterminate","checked","onChangeTag","padding","pathIndex","listStyle","borderBottom","onChangePath","paddingTop","image","PRESENTED_IMAGE_SIMPLE","PageTable","mockStatusList","columns","align","text","record","dataIndex","toUpperCase","CopyOutlined","currentFocus","activeElement","input","opacity","scrollY","focus","setSelectionRange","execCommand","removeChild","scrollTo","info","copyText","defaultValue","onHandleTableRow","mockStatus","isLock","size","LockOutlined","UnlockOutlined","EyeOutlined","EditOutlined","onConfirm","okText","cancelText","dataSource","rowKey","pagination","HandleInterface","ref","useImperativeHandle","aceRef","useRef","isEdit","setIsEdit","mockData","setMockData","detailFormData","setDetailFormData","prefixList","setPrefixList","baseDataList","setBaseDataList","drawerType","drawerId","setFieldsValue","current","setValue","get","validateFields","jsonData","log","jsonValue","onSaveSuccess","span","labelCol","wrapperCol","initialValues","autoComplete","Group","buttonStyle","code","href","Button","baseData","tailLayout","offset","routes","component","filter","setFilter","tableList","setTableList","setDrawerType","setDrawerId","setProjectConfig","getListData","page","rows","list","handleInterfaceRef","useCallback","warning","keyboard","centered","maskClosable","history","handleTableRow","table","assign","setTimeout","exact","setDataSource","setVisible","confirmLoading","setConfirmLoading","handleId","setHandleId","editBaseData","deleteBaseData","remark","aceData","getList","resetFields","onCancel","startsWith","delay","configId","setConfigId","changeOrigin","onFinishFailed","errorInfo","withRouter","count","location","pathname","mode","defaultSelectedKeys","to","rel","alt","Content","minHeight","children","Header","Footer","RouteWithSubRoutes","route","App","zIndex","Boolean","hostname","match","ReactDOM","locale","zhCN","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.67d77ec0.chunk.js","sourcesContent":["/**\n * 批量异步加载script脚本\n * @param {*} srcList src地址集合\n */\nexport function AsyncLoadScript(srcList) {\n  let scPromise = [];\n  srcList.forEach((src) => {\n    scPromise.push(load(src, true));\n  });\n  return Promise.all(scPromise);\n}\n\n/**\n * 批量同步加载script脚本\n * @param {*} srcList \n */\nexport function LoadScript(srcList) {\n  let emp = true;\n  srcList.forEach(async (src) => {\n    try {\n      await load(src, false);\n    } catch (reason) {\n      emp = false;\n    }\n  });\n  return new Promise((resolve, reject) => {\n    if (emp) {\n      resolve();\n    } else {\n      reject();\n    }\n  });\n}\nfunction load(src, isAsync) {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement(\"script\");\n    script.src = src;\n    script.async = isAsync;\n    script.onload = function () {\n      resolve();\n    };\n    script.onerror = function () {\n      reject();\n    };\n    document.body.appendChild(script);\n  });\n}\n","import React from \"react\";\nimport { LoadScript } from \"../utils/load-script\";\n\nexport class Ace extends React.Component {\n  constructor(props) {\n    super(props);\n    LoadScript([\n      \"./lib/ace-1.4.4/src/ace.js\",\n      \"./lib/ace-1.4.4/src/theme-chrome.js\",\n      \"./lib/ace-1.4.4/src/mode-json.js\",\n      \"./lib/ace-1.4.4/src/snippets/json.js\",\n      \"./lib/ace-1.4.4/src/ext-language_tools.js\",\n    ])\n      .then(() => {\n        this.setState({\n          isLoadAce: true,\n        });\n      })\n      .catch((reason) => {\n        console.error(\">>>>>>\", reason);\n      });\n    this.state = {\n      isLoadAce: false,\n    };\n    React.forwardRef(this.render);\n  }\n  // 启动全屏\n  launchFullscreen(element) {\n    if (element.requestFullscreen) {\n      element.requestFullscreen();\n    } else if (element.mozRequestFullScreen) {\n      element.mozRequestFullScreen();\n    } else if (element.webkitRequestFullscreen) {\n      element.webkitRequestFullscreen();\n    } else if (element.msRequestFullscreen) {\n      element.msRequestFullscreen();\n    }\n  }\n\n  // 退出全屏\n  exitFullscreen() {\n    if (document.exitFullscreen) {\n      document.exitFullscreen();\n    } else if (document.mozCancelFullScreen) {\n      document.mozCancelFullScreen();\n    } else if (document.webkitExitFullscreen) {\n      document.webkitExitFullscreen();\n    }\n  }\n\n  initAce() {\n    if (!this.state.isLoadAce || !window.ace) return;\n    const owner = this;\n    const editor = (this.editor = window.ace.edit(\"interface-data\"));\n    editor.setTheme(\"ace/theme/chrome\"); //设置主题\n    var JavaScriptMode = window.ace.require(\"ace/mode/json\").Mode;\n    editor.session.setMode(new JavaScriptMode()); //设置程序语言模式\n\n    // 设置自动补全\n    var tangideCompleter = {\n      identifierRegexps: [/[a-zA-Z_0-9@\\-\\u00A2-\\uFFFF]/],\n      getCompletions: function (editor, session, pos, prefix, callback) {\n        if (prefix.length === 0) {\n          return callback(null, []);\n        } else {\n          return callback(null, autoCompleteData);\n        }\n      },\n    };\n    // 自定义补全列表\n    var autoCompleteData = [\n      {\n        name: \"mock string\",\n        value: \"@string\",\n        caption: \"@string\",\n        meta: \"Mock-String\",\n        type: \"local\",\n        score: 1000,\n      },\n      {\n        name: \"mock number\",\n        value: \"@number\",\n        caption: \"@number\",\n        meta: \"Mock-Number\",\n        score: 1000,\n      },\n      {\n        name: \"mock integer\",\n        value: \"@integer\",\n        caption: \"@integer\",\n        meta: \"Mock-Integer\",\n        score: 1000,\n      },\n      // {\n      //   name: \"mock image\",\n      //   value: Random.image(\"200x100\"),\n      //   caption: \"@image\",\n      //   meta: \"Mock-Image\",\n      //   score: 1000,\n      // },\n    ];\n    editor.setOptions({\n      enableBasicAutocompletion: true,\n      enableSnippets: true,\n      enableLiveAutocompletion: true,\n    });\n    var langTools = window.ace.require(\"ace/ext/language_tools\");\n    langTools.addCompleter(tangideCompleter);\n\n    // 设置全屏\n    editor.commands.addCommand({\n      name: \"fullscreen\",\n      bindKey: { win: \"Ctrl-Enter\", mac: \"Command-Enter\" },\n      exec: function (editor) {\n        var ele = document.getElementById(\"interface-data\");\n        if (\n          document.isFullScreen ||\n          document.mozIsFullScreen ||\n          document.webkitIsFullScreen\n        ) {\n          owner.exitFullscreen();\n        } else {\n          owner.launchFullscreen(ele);\n        }\n      },\n      readOnly: true, // 只读下设置可以全屏展示\n    });\n\n    // editor.getSession().setUseWrapMode(true);//设置折叠 默认折叠的\n    editor.getSession().setTabSize(2); // 设置制表符大小\n    // 改变事件\n    editor.getSession().on(\"change\", function (e, a) {});\n  }\n\n  getValue() {\n    return this.editor.getValue();\n  }\n\n  componentDidUpdate() {\n    this.initAce();\n  }\n\n  render() {\n    return (\n      <div\n        id=\"interface-data\"\n        style={{\n          width: \"100%\",\n          height: this.props.height || \"300px\",\n          position: \"relative\",\n          lineHeight: \"1.5\",\n          fontSize: \"14px\",\n          border: \"1px #eee solid\",\n        }}\n      ></div>\n    );\n  }\n}\n","import JSON5 from \"json5\";\r\n\r\nconst pathList = [];\r\n\r\nexport function swaggerHandle(res) {\r\n  Object.keys(res.paths).forEach(function (pathKey) {\r\n    const pathData = res.paths[pathKey];\r\n    Object.keys(pathData).forEach(function (methodKey) {\r\n      const methodData = pathData[methodKey];\r\n      // 响应数据\r\n      let resData = {};\r\n\r\n      const responses = Object.keys(methodData.responses);\r\n      let response = null;\r\n      for (let i = 0; i < responses.length; i++) {\r\n        if (responses[i] === 200) {\r\n          response = methodData.responses[responses[i]].schema;\r\n          break;\r\n        }\r\n      }\r\n      resData = getResData(response);\r\n\r\n      const api = {\r\n        name: methodData.summary,\r\n        path: pathKey,\r\n        data: resData,\r\n        sourceData: JSON5.stringify(JSON.stringify(resData, null, 2)),\r\n        method: methodKey.toLocaleUpperCase(),\r\n        prefix: res.basePath,\r\n        isOpen: true,\r\n      };\r\n\r\n      res.tags.forEach(function (tag) {\r\n        if (tag.name === methodData.tags[0]) {\r\n          // 同一tag\r\n          if (!tag.paths) {\r\n            tag.paths = [api];\r\n          } else {\r\n            tag.paths.push(api);\r\n          }\r\n        }\r\n      });\r\n\r\n      pathList.push(api);\r\n    });\r\n  });\r\n\r\n  return res.tags;\r\n}\r\n\r\n// 组装响应数据\r\nfunction getResData(data) {\r\n  if (!data) return {};\r\n\r\n  let res;\r\n  if (data.type === \"object\") {\r\n    res = {};\r\n    data = data.properties;\r\n    if (!data) return {};\r\n    Object.keys(data).forEach(function (propKey) {\r\n      res[propKey] = getResData(data[propKey]);\r\n    });\r\n  } else if (data.type === \"array\") {\r\n    res = [];\r\n    res.push(getResData(data.items));\r\n  } else {\r\n    if (!data.example) {\r\n      if (data.type === \"integer\" || data.type === \"number\") data.example = 0;\r\n      if (data.type === \"boolean\") data.example = true;\r\n      if (data.type === \"string\") data.example = \"\";\r\n    }\r\n    res = data.example;\r\n  }\r\n\r\n  return res;\r\n}\r\n","import React, {\r\n  useState,\r\n  useEffect,\r\n  useRef,\r\n  useImperativeHandle,\r\n  forwardRef,\r\n  useCallback,\r\n} from \"react\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Table,\r\n  Tag,\r\n  Select,\r\n  Space,\r\n  message,\r\n  Popconfirm,\r\n  Drawer,\r\n  Row,\r\n  Col,\r\n  Radio,\r\n  Modal,\r\n  Collapse,\r\n  Checkbox,\r\n  Tabs,\r\n  Upload,\r\n  Empty,\r\n} from \"antd\";\r\nimport {\r\n  PlusCircleOutlined,\r\n  ImportOutlined,\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n  EyeOutlined,\r\n  LockOutlined,\r\n  UnlockOutlined,\r\n  CopyOutlined,\r\n  ExclamationCircleOutlined,\r\n  GlobalOutlined,\r\n  UploadOutlined,\r\n  FileTextOutlined,\r\n} from \"@ant-design/icons\";\r\nimport Axios from \"axios\";\r\nimport JSON5 from \"json5\";\r\nimport { Ace } from \"../base/ace\";\r\nimport { mock } from \"mockjs\";\r\nimport { copyText } from \"../utils/copy\";\r\nimport Swagger from \"swagger-client\";\r\nimport { swaggerHandle } from \"../utils/swagger-handle\";\r\n\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\nconst { Panel } = Collapse;\r\nconst { TabPane } = Tabs;\r\n\r\nexport function Home(props) {\r\n  const [filter, setFilter] = useState({});\r\n\r\n  const [tableList, setTableList] = useState([]);\r\n\r\n  const [drawer, setDrawer] = useState(false);\r\n\r\n  const [drawerType, setDrawerType] = useState(null);\r\n\r\n  const [drawerId, setDrawerId] = useState(null);\r\n\r\n  const [projectConfig, setProjectConfig] = useState({});\r\n\r\n  const getListData = (name, url, page) => {\r\n    const param = {\r\n      name,\r\n      url,\r\n      page: 1,\r\n      rows: 20,\r\n    };\r\n    Axios.post(\"/api/get-interface-list\", param).then((res) => {\r\n      if (res.data.success) {\r\n        setTableList(res.data.data.list);\r\n      } else {\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleInterfaceRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    getListData(filter.name, filter.url, 1);\r\n  }, [filter]);\r\n\r\n  const updateProjectConfig = useCallback(() => {\r\n    Axios.get(\"/api/get-config\").then((res) => {\r\n      if (res.data.success) {\r\n        setProjectConfig(res.data.data);\r\n        if (!res.data.data.target) {\r\n          // 跳转项目配置页面\r\n          Modal.warning({\r\n            title: \"警告\",\r\n            keyboard: false,\r\n            centered: true,\r\n            maskClosable: false,\r\n            okText: \"去设置\",\r\n            content: (\r\n              <div>\r\n                <p>检测到你还没有维护代理地址, 请先维护项目代理地址</p>\r\n              </div>\r\n            ),\r\n            onOk() {\r\n              props.history.push(\"/project\");\r\n            },\r\n          });\r\n        }\r\n      } else {\r\n        message.error(res.data.errorMsg);\r\n      }\r\n    });\r\n  }, [setProjectConfig, props.history]);\r\n\r\n  useEffect(() => {\r\n    updateProjectConfig();\r\n  }, [updateProjectConfig]);\r\n\r\n  function handleTableRow(type, value, id) {\r\n    if (type === \"changeMock\") {\r\n      // 切换mock状态\r\n      Axios.post(\"/api/change-interface-mock-status\", {\r\n        id,\r\n        isOpen: value === \"open\",\r\n      }).then((res) => {\r\n        if (res.data.success) {\r\n          message.success(\r\n            value === \"open\"\r\n              ? \"Mock状态开启成功,你可以使用Mock数据了\"\r\n              : \"Mock状态已停用,你可以使用真实的接口数据了\"\r\n          );\r\n          const table = tableList.map((data) => {\r\n            if (id === data._id) {\r\n              return Object.assign(data, {\r\n                isOpen: value === \"open\",\r\n              });\r\n            }\r\n            return data;\r\n          });\r\n          // 更改列表数据\r\n          setTableList(table);\r\n        } else {\r\n          message.error(res.data.errorMsg);\r\n        }\r\n      });\r\n    } else if (type === \"changeLock\") {\r\n      // 切换锁\r\n      Axios.post(\"/api/change-interface-lock-status\", {\r\n        id,\r\n        isLock: value,\r\n      }).then((res) => {\r\n        if (res.data.success) {\r\n          message.success(\r\n            value ? \"接口已锁，将无法编辑与删除操作\" : \"接口已解锁\"\r\n          );\r\n          const table = tableList.map((data) => {\r\n            if (id === data._id) {\r\n              return Object.assign(data, {\r\n                isLock: value,\r\n              });\r\n            }\r\n            return data;\r\n          });\r\n          // 更改列表数据\r\n          setTableList(table);\r\n        } else {\r\n          message.error(res.data.errorMsg);\r\n        }\r\n      });\r\n    } else if (type === \"delete\") {\r\n      // 删除接口\r\n      Axios.post(\"/api/delete-interface\", {\r\n        id,\r\n      }).then((res) => {\r\n        if (res.data.success) {\r\n          message.success(\"删除成功\");\r\n          // 重新查询数据\r\n          getListData(filter.name, filter.url, 1);\r\n        } else {\r\n        }\r\n      });\r\n    } else if (type === \"edit\") {\r\n      // 编辑接口\r\n      setDrawerType(\"edit\");\r\n      setDrawerId(id);\r\n      setDrawer(true);\r\n    } else if (type === \"look\") {\r\n      // 查看接口\r\n      setDrawerType(\"look\");\r\n      setDrawerId(id);\r\n      setDrawer(true);\r\n    } else if (type === \"add\") {\r\n      // 新增接口\r\n      setDrawerType(\"add\");\r\n      setDrawerId(null);\r\n      setDrawer(true);\r\n    }\r\n  }\r\n\r\n  function saveSuccess() {\r\n    setDrawer(false);\r\n    setTimeout(() => {\r\n      getListData(filter.name, filter.url, 1);\r\n    }, 320);\r\n  }\r\n\r\n  const deleteAllInterface = () => {\r\n    Modal.confirm({\r\n      title: \"您确认要删除所有接口？\",\r\n      content: \"已经被锁定的接口不会被删除\",\r\n      icon: <ExclamationCircleOutlined />,\r\n      okType: \"danger\",\r\n      okText: \"删除\",\r\n      onOk() {\r\n        Axios.get(\"/api/delete-all-interface\").then((res) => {\r\n          if (res.data.success) {\r\n            message.success(\"已成功清空所有未被锁定的接口\");\r\n            getListData(filter.name, filter.url, 1);\r\n          } else {\r\n            message.error(res.data.errorMsg);\r\n          }\r\n        });\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Search\r\n        onSearch={(values) => {\r\n          setFilter(values);\r\n        }}\r\n        projectConfig={projectConfig}\r\n        updateProjectConfig={updateProjectConfig}\r\n      ></Search>\r\n      <HandleBtn\r\n        initSearch={() => {\r\n          getListData();\r\n        }}\r\n        openDrawer={() => {\r\n          handleTableRow(\"add\", null, null);\r\n        }}\r\n        deleteAllInterface={deleteAllInterface}\r\n      ></HandleBtn>\r\n      <PageTable\r\n        dataSource={tableList}\r\n        onHandleTableRow={handleTableRow}\r\n      ></PageTable>\r\n\r\n      <Drawer\r\n        title={\r\n          drawerType === \"add\"\r\n            ? \"新增接口\"\r\n            : drawerType === \"edit\"\r\n            ? \"编辑接口\"\r\n            : \"查看接口\"\r\n        }\r\n        placement=\"left\"\r\n        destroyOnClose={true}\r\n        forceRender={true}\r\n        onClose={() => setDrawer(false)}\r\n        visible={drawer}\r\n        width=\"80%\"\r\n        footer={\r\n          <div\r\n            style={{\r\n              textAlign: \"right\",\r\n            }}\r\n          >\r\n            <Button onClick={() => setDrawer(false)} style={{ marginRight: 8 }}>\r\n              关闭\r\n            </Button>\r\n            {drawerType !== \"look\" ? (\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={() => {\r\n                  handleInterfaceRef.current.onFinish();\r\n                }}\r\n              >\r\n                保存\r\n              </Button>\r\n            ) : null}\r\n            (\r\n          </div>\r\n        }\r\n      >\r\n        <HandleInterface\r\n          drawerType={drawerType}\r\n          drawerId={drawerId}\r\n          ref={handleInterfaceRef}\r\n          onSaveSuccess={saveSuccess}\r\n        ></HandleInterface>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Search(props) {\r\n  const [form] = Form.useForm();\r\n  const [, forceUpdate] = useState();\r\n\r\n  // To disable submit button at the beginning.\r\n  useEffect(() => {\r\n    forceUpdate({});\r\n  }, []);\r\n\r\n  const onFinish = (values) => {\r\n    props.onSearch(values);\r\n  };\r\n\r\n  const updateConfig = () => {\r\n    Axios.post(\"/api/update-config-mock\", {\r\n      id: props.projectConfig._id,\r\n      mock: !props.projectConfig.mock,\r\n    }).then((res) => {\r\n      if (res.data.success) {\r\n        message.success(\r\n          !props.projectConfig.mock\r\n            ? \"已启用项目Mock功能\"\r\n            : \"已停用项目Mock功能\"\r\n        );\r\n        props.updateProjectConfig();\r\n      } else {\r\n        message.error(res.data.errorMsg);\r\n      }\r\n    });\r\n  };\r\n\r\n  const changeMock = () => {\r\n    if (props.projectConfig.mock) {\r\n      Modal.confirm({\r\n        title: \"您确认要停用Mock功能吗？\",\r\n        content: \"设置后所有Mock接口将不可用, 服务只保留反向代理功能\",\r\n        icon: <ExclamationCircleOutlined />,\r\n        okType: \"danger\",\r\n        onOk() {\r\n          updateConfig();\r\n        },\r\n      });\r\n    } else {\r\n      updateConfig();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"clearfix\">\r\n      <Form\r\n        form={form}\r\n        name=\"horizontal_login\"\r\n        layout=\"inline\"\r\n        onFinish={onFinish}\r\n        className=\"float-left\"\r\n      >\r\n        <Form.Item name=\"name\">\r\n          <Input placeholder=\"请输入接口名称\" />\r\n        </Form.Item>\r\n        <Form.Item name=\"url\">\r\n          <Input placeholder=\"请输入接口地址\" />\r\n        </Form.Item>\r\n        <Form.Item shouldUpdate={true}>\r\n          {() => (\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              查 询\r\n            </Button>\r\n          )}\r\n        </Form.Item>\r\n      </Form>\r\n      <div\r\n        className=\"float-right cursor-pointer\"\r\n        style={{ color: props.projectConfig.mock ? \"#28a745\" : \"#dc3545\" }}\r\n        onClick={() => changeMock()}\r\n      >\r\n        <span\r\n          style={{\r\n            display: \"inline-block\",\r\n            width: \"8px\",\r\n            height: \"8px\",\r\n            borderRadius: \"4px\",\r\n            marginRight: \"5px\",\r\n            backgroundColor: props.projectConfig.mock ? \"#28a745\" : \"#dc3545\",\r\n          }}\r\n        ></span>\r\n        {props.projectConfig.mock ? (\r\n          <span>Mock 启用中...</span>\r\n        ) : (\r\n          <span>Mock 停用中...</span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction HandleBtn(props) {\r\n  const [drawer, setDrawer] = useState(false);\r\n  const [urlForm] = Form.useForm();\r\n  const [fileForm] = Form.useForm();\r\n  const [dataList, setDataList] = useState([]);\r\n  const [fileName, setFileName] = useState([]);\r\n  const [tagNameList, setTagNameList] = useState([]);\r\n  const confirmImport = () => {\r\n    // 导入\r\n    const param = [];\r\n    dataList.forEach((data) => {\r\n      data.paths.forEach((path) => {\r\n        if (path.isCheck) param.push(path);\r\n      });\r\n    });\r\n    Axios.post(\"/api/import-interface\", param).then((res) => {\r\n      if (res.data.success) {\r\n        message.success(\"导入成功\");\r\n        props.initSearch();\r\n        setDrawer(false);\r\n      } else {\r\n        message.error(res.data.errorMsg);\r\n      }\r\n    });\r\n  };\r\n  const onChangeTag = (e, data, index) => {\r\n    setDataList(\r\n      dataList.map((tag) => {\r\n        if (tag.name === data.name) {\r\n          tag.paths.forEach((path) => (path.isCheck = e.target.checked));\r\n        }\r\n        return tag;\r\n      })\r\n    );\r\n  };\r\n  const onChangePath = (e, data, pathData) => {\r\n    setDataList(\r\n      dataList.map((tag) => {\r\n        if (tag.name === data.name) {\r\n          tag.paths.forEach((path) => {\r\n            if (pathData.path === path.path) path.isCheck = e.target.checked;\r\n          });\r\n        }\r\n        return tag;\r\n      })\r\n    );\r\n  };\r\n  const stopPropagation = (e) => e.stopPropagation();\r\n\r\n  const onFinish = (values, type) => {\r\n    if (type === \"url\") {\r\n      // url 导入\r\n      Swagger(values.url).then((swaggerData) => {\r\n        if (JSON.stringify(swaggerData.spec) === \"{}\") {\r\n          message.error(\"该地址不是标准的JSON数据结构\");\r\n          return;\r\n        }\r\n        setDataList(swaggerHandle(swaggerData.spec));\r\n      });\r\n    } else {\r\n      // 文件导入\r\n      var reader = new FileReader();\r\n      reader.readAsText(values.file.file);\r\n      reader.onload = (res) => {\r\n        try {\r\n          res = JSON.parse(res.target.result);\r\n\r\n          Swagger({\r\n            spec: res,\r\n          }).then(function (swaggerData) {\r\n            if (JSON.stringify(swaggerData.spec) === \"{}\") {\r\n              message.error(\"该地址不是标准的JSON数据结构\");\r\n              return;\r\n            }\r\n            setDataList(swaggerHandle(swaggerData.spec));\r\n          });\r\n        } catch (e) {\r\n          console.error(\"json 解析出错\", e.message);\r\n        }\r\n      };\r\n    }\r\n  };\r\n\r\n  const onFileChange = (value) => {\r\n    setFileName(value.file.name);\r\n  };\r\n  const openCollapse = () => {\r\n    setTagNameList(\r\n      tagNameList.length > 0 ? [] : dataList.map((data) => data.name)\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"pt-20 pb-20 clearfix\">\r\n      <div style={{ float: \"left\" }}>\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={() => props.openDrawer()}\r\n          icon={<PlusCircleOutlined />}\r\n        >\r\n          新建接口\r\n        </Button>\r\n        <Button\r\n          onClick={() => setDrawer(true)}\r\n          type=\"dashed\"\r\n          icon={<ImportOutlined />}\r\n          className=\"ml-20\"\r\n        >\r\n          导入Swagger 接口\r\n        </Button>\r\n      </div>\r\n      <div style={{ float: \"right\" }}>\r\n        <Button\r\n          danger\r\n          onClick={() => props.deleteAllInterface()}\r\n          icon={<DeleteOutlined />}\r\n        >\r\n          清空当前所有接口\r\n        </Button>\r\n      </div>\r\n      <Drawer\r\n        title=\"导入 Swagger API 接口\"\r\n        placement=\"left\"\r\n        destroyOnClose={true}\r\n        forceRender={true}\r\n        onClose={() => setDrawer(false)}\r\n        visible={drawer}\r\n        width=\"80%\"\r\n        footer={\r\n          <div\r\n            style={{\r\n              textAlign: \"right\",\r\n            }}\r\n          >\r\n            <Button onClick={() => setDrawer(false)} style={{ marginRight: 8 }}>\r\n              关闭\r\n            </Button>\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => {\r\n                confirmImport();\r\n              }}\r\n            >\r\n              确认导入\r\n            </Button>\r\n          </div>\r\n        }\r\n      >\r\n        <div>\r\n          <Tabs defaultActiveKey=\"1\">\r\n            <TabPane\r\n              tab={\r\n                <span>\r\n                  <GlobalOutlined />\r\n                  URL 导入\r\n                </span>\r\n              }\r\n              key=\"1\"\r\n            >\r\n              <Form\r\n                layout=\"inline\"\r\n                form={urlForm}\r\n                name=\"control-hooks\"\r\n                onFinish={(values) => onFinish(values, \"url\")}\r\n              >\r\n                <Form.Item\r\n                  name=\"url\"\r\n                  label=\"swagger json 地址\"\r\n                  rules={[{ required: true }]}\r\n                >\r\n                  <Input />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                  <Button type=\"primary\" htmlType=\"submit\">\r\n                    获取\r\n                  </Button>\r\n                </Form.Item>\r\n              </Form>\r\n            </TabPane>\r\n            <TabPane\r\n              tab={\r\n                <span>\r\n                  <UploadOutlined />\r\n                  FILE 导入\r\n                </span>\r\n              }\r\n              key=\"2\"\r\n            >\r\n              <Form\r\n                layout=\"inline\"\r\n                form={fileForm}\r\n                name=\"control-hooks\"\r\n                onFinish={(values) => onFinish(values, \"file\")}\r\n              >\r\n                <Form.Item\r\n                  name=\"file\"\r\n                  label=\"本地json文件\"\r\n                  rules={[\r\n                    { required: true, message: \"请选择swagger json文件\" },\r\n                  ]}\r\n                >\r\n                  <Upload\r\n                    name=\"logo\"\r\n                    showUploadList={false}\r\n                    beforeUpload={() => {\r\n                      return false;\r\n                    }}\r\n                    fileList={[]}\r\n                    onChange={onFileChange}\r\n                  >\r\n                    <Button>\r\n                      <FileTextOutlined /> 选择文件\r\n                    </Button>\r\n                  </Upload>\r\n                </Form.Item>\r\n                <div style={{ lineHeight: \"32px\" }} className=\"mr-20\">\r\n                  {fileName}\r\n                </div>\r\n                <Form.Item>\r\n                  <Button type=\"primary\" htmlType=\"submit\">\r\n                    获取\r\n                  </Button>\r\n                </Form.Item>\r\n              </Form>\r\n            </TabPane>\r\n          </Tabs>\r\n        </div>\r\n        {dataList.length > 0 ? (\r\n          <>\r\n            <div className=\"pt-20\">\r\n              {/* <Button type=\"dashed\" onClick={openCollapse}>\r\n                一键展开/收起\r\n              </Button> */}\r\n              <div className=\"float-right\" style={{ lineHeight: \"32px\" }}>\r\n                已经存在的接口地址不会被覆盖导入\r\n              </div>\r\n            </div>\r\n            <div className=\"pt-20\">\r\n              <Collapse defaultActiveKey={tagNameList}>\r\n                {dataList.map((data, index) => {\r\n                  return (\r\n                    <Panel\r\n                      header={\r\n                        <Checkbox\r\n                          indeterminate={data.indeterminate}\r\n                          onChange={(e) => onChangeTag(e, data, index)}\r\n                          onClick={stopPropagation}\r\n                        >\r\n                          <span onClick={stopPropagation}>{data.name}</span>\r\n                        </Checkbox>\r\n                      }\r\n                      key={data.name}\r\n                    >\r\n                      <ul className=\"m-0\" style={{ padding: \"0 24px\" }}>\r\n                        {data.paths.map((path, pathIndex) => {\r\n                          return (\r\n                            <li\r\n                              style={{\r\n                                padding: \"10px 0\",\r\n                                listStyle: \"none\",\r\n                                borderBottom:\r\n                                  pathIndex === data.paths.length - 1\r\n                                    ? null\r\n                                    : \"1px #eee solid\",\r\n                              }}\r\n                              key={path.path}\r\n                            >\r\n                              <Checkbox\r\n                                checked={path.isCheck}\r\n                                onChange={(e) => onChangePath(e, data, path)}\r\n                                onClick={stopPropagation}\r\n                              >\r\n                                {path.path} {path.name}\r\n                              </Checkbox>\r\n                            </li>\r\n                          );\r\n                        })}\r\n                      </ul>\r\n                    </Panel>\r\n                  );\r\n                })}\r\n              </Collapse>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <Empty\r\n            style={{ paddingTop: \"80px\" }}\r\n            image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n          />\r\n        )}\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction PageTable(props) {\r\n  const mockStatusList = [\r\n    {\r\n      value: \"open\",\r\n      label: \"启用中\",\r\n    },\r\n    {\r\n      value: \"close\",\r\n      label: \"停用中\",\r\n    },\r\n  ];\r\n\r\n  const columns = [\r\n    {\r\n      title: \"序号\",\r\n      width: 70,\r\n      align: \"center\",\r\n      render: (text, record, index) => `${index + 1}`,\r\n    },\r\n    {\r\n      title: \"接口名称\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n    },\r\n    {\r\n      title: \"接口类型\",\r\n      dataIndex: \"method\",\r\n      key: \"method\",\r\n      align: \"center\",\r\n      render: (method) => (\r\n        <Tag color={method === \"POST\" ? \"#52c41a\" : \"#1890ff\"}>\r\n          {method.toUpperCase()}\r\n        </Tag>\r\n      ),\r\n    },\r\n    {\r\n      title: \"接口前缀\",\r\n      dataIndex: \"prefix\",\r\n      key: \"prefix\",\r\n    },\r\n    {\r\n      title: \"接口地址\",\r\n      dataIndex: \"path\",\r\n      key: \"path\",\r\n      render: (text) => (\r\n        <>\r\n          <CopyOutlined onClick={() => copyText(text)} className=\"pr-10\" />\r\n          <span>{text}</span>\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Mock启用状态\",\r\n      dataIndex: \"isOpen\",\r\n      key: \"isOpen\",\r\n      width: 150,\r\n      align: \"center\",\r\n      render: (text, record, index) => (\r\n        <Select\r\n          defaultValue={record.isOpen ? \"open\" : \"close\"}\r\n          style={{\r\n            width: 100,\r\n            color: record.isOpen ? \"#52c41a\" : \"#ff4d4f\",\r\n          }}\r\n          onChange={(value) =>\r\n            props.onHandleTableRow(\"changeMock\", value, record._id)\r\n          }\r\n        >\r\n          {mockStatusList.map((mockStatus) => {\r\n            return (\r\n              <Option\r\n                value={mockStatus.value}\r\n                key={mockStatus.value}\r\n                id={record._id}\r\n              >\r\n                {mockStatus.label}\r\n              </Option>\r\n            );\r\n          })}\r\n        </Select>\r\n      ),\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      width: 270,\r\n      align: \"center\",\r\n      render: (text, record, index) => (\r\n        <Space>\r\n          {record.isLock ? (\r\n            <>\r\n              <Button\r\n                type=\"link\"\r\n                size=\"small\"\r\n                onClick={() =>\r\n                  props.onHandleTableRow(\"changeLock\", false, record._id)\r\n                }\r\n                icon={<LockOutlined />}\r\n              />\r\n            </>\r\n          ) : (\r\n            <Button\r\n              type=\"link\"\r\n              size=\"small\"\r\n              onClick={() =>\r\n                props.onHandleTableRow(\"changeLock\", true, record._id)\r\n              }\r\n              icon={<UnlockOutlined />}\r\n            />\r\n          )}\r\n          <Button\r\n            size=\"small\"\r\n            onClick={() => props.onHandleTableRow(\"look\", null, record._id)}\r\n            type=\"primary\"\r\n            icon={<EyeOutlined />}\r\n          >\r\n            查看\r\n          </Button>\r\n          {!record.isLock ? (\r\n            <>\r\n              <Button\r\n                size=\"small\"\r\n                onClick={() => props.onHandleTableRow(\"edit\", null, record._id)}\r\n                icon={<EditOutlined />}\r\n              >\r\n                编辑\r\n              </Button>\r\n              <Popconfirm\r\n                title=\"您确定要删除该接口吗?\"\r\n                onConfirm={() => {\r\n                  props.onHandleTableRow(\"delete\", null, record._id);\r\n                }}\r\n                okText=\"确定\"\r\n                cancelText=\"不删了\"\r\n              >\r\n                <Button size=\"small\" danger icon={<DeleteOutlined />}>\r\n                  删除\r\n                </Button>\r\n              </Popconfirm>\r\n            </>\r\n          ) : null}\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Table\r\n      columns={columns}\r\n      dataSource={props.dataSource}\r\n      rowKey={(record) => record._id}\r\n      pagination={false}\r\n    />\r\n  );\r\n}\r\n\r\nlet HandleInterface = function (props, ref) {\r\n  useImperativeHandle(ref, () => ({\r\n    onFinish: () => {\r\n      onFinish();\r\n    },\r\n  }));\r\n\r\n  const aceRef = useRef(null);\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const [isEdit, setIsEdit] = useState(true);\r\n  const [mockData, setMockData] = useState(null);\r\n  const [detailFormData, setDetailFormData] = useState({});\r\n  const [prefixList, setPrefixList] = useState([]);\r\n  const [baseDataList, setBaseDataList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // 非新增接口查询详情\r\n    if (props.drawerType && props.drawerType !== \"add\") {\r\n      Axios.post(\"/api/get-interface-detail\", { id: props.drawerId }).then(\r\n        (res) => {\r\n          if (res.data.success) {\r\n            const data = {\r\n              name: res.data.data.name,\r\n              path: res.data.data.path,\r\n              method: res.data.data.method,\r\n              prefix: res.data.data.prefix,\r\n            };\r\n            form.setFieldsValue(data);\r\n            setDetailFormData(data);\r\n            // 回显json5数据\r\n            aceRef.current.editor.setValue(\r\n              JSON5.parse(res.data.data.sourceData)\r\n            );\r\n            setMockData(JSON.stringify(mock(res.data.data.data), null, 4));\r\n          } else {\r\n            message.error(res.data.errorMsg);\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }, [props.drawerType, props.drawerId, form]);\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"/api/get-prefix-list\").then((res) => {\r\n      if (res.data.success) {\r\n        setPrefixList(res.data.data);\r\n      } else {\r\n        message.error(res.data.errorMsg);\r\n      }\r\n    });\r\n    Axios.get(\"/api/get-base-list\").then((res) => {\r\n      if (res.data.success) {\r\n        setBaseDataList(res.data.data);\r\n      } else {\r\n        message.error(res.data.errorMsg);\r\n      }\r\n    });\r\n  }, [setPrefixList, setBaseDataList]);\r\n\r\n  const changeBaseData = (index) => {\r\n    aceRef.current.editor.setValue(\r\n      index === \"\" ? \"\" : JSON.stringify(baseDataList[index].data, null, 2)\r\n    );\r\n  };\r\n\r\n  // 获取响应数据\r\n  const jsonValue = () => {\r\n    if (!aceRef.current.getValue()) {\r\n      message.error(\"请输入响应数据\");\r\n      return false;\r\n    }\r\n    try {\r\n      return JSON5.parse(aceRef.current.getValue());\r\n    } catch (reason) {\r\n      console.log(reason);\r\n      message.error(\"json 解析出错\");\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const onFinish = () => {\r\n    form\r\n      .validateFields()\r\n      .then((values) => {\r\n        const jsonData = jsonValue();\r\n        if (!jsonData) return;\r\n\r\n        const param = {\r\n          name: values.name,\r\n          path: values.path,\r\n          data: mock(jsonData),\r\n          sourceData: JSON5.stringify(aceRef.current.getValue()),\r\n          method: values.method,\r\n          prefix: values.prefix,\r\n          isOpen: true,\r\n        };\r\n\r\n        let url;\r\n\r\n        if (props.drawerId) {\r\n          url = \"/api/update-interface\";\r\n          param.id = props.drawerId;\r\n        } else {\r\n          url = \"/api/add-interface\";\r\n        }\r\n\r\n        Axios.post(url, param).then((res) => {\r\n          if (res.data.success) {\r\n            props.onSaveSuccess();\r\n            message.success(\"保存成功\");\r\n          } else {\r\n            message.error(res.data.errorMsg);\r\n          }\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      {/* 表单项 */}\r\n      <Col span={10} className=\"pr-10\">\r\n        <Form\r\n          layout={{\r\n            labelCol: { span: 0 },\r\n            wrapperCol: { span: 24 },\r\n          }}\r\n          form={form}\r\n          name=\"basic\"\r\n          initialValues={{\r\n            name: \"\",\r\n            path: \"\",\r\n            method: \"GET\",\r\n            prefix: \"\",\r\n          }}\r\n        >\r\n          <h4>接口名称</h4>\r\n          {props.drawerType !== \"look\" ? (\r\n            <Form.Item\r\n              name=\"name\"\r\n              rules={[{ required: true, message: \"请输入接口名称!\" }]}\r\n            >\r\n              <Input autoComplete=\"off\" />\r\n            </Form.Item>\r\n          ) : (\r\n            <ul>\r\n              <li>{detailFormData.name}</li>\r\n            </ul>\r\n          )}\r\n\r\n          <h4>请求方式</h4>\r\n          {props.drawerType !== \"look\" ? (\r\n            <Form.Item name=\"method\">\r\n              <Radio.Group buttonStyle=\"solid\">\r\n                <Radio value=\"GET\">GET</Radio>\r\n                <Radio value=\"POST\">POST</Radio>\r\n                <Radio value=\"PUT\">PUT</Radio>\r\n                <Radio value=\"DELETE\">DELETE</Radio>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n          ) : (\r\n            <ul>\r\n              <li>{detailFormData.method}</li>\r\n            </ul>\r\n          )}\r\n\r\n          <h4>工程前缀</h4>\r\n          {props.drawerType !== \"look\" ? (\r\n            <Form.Item name=\"prefix\">\r\n              <Select>\r\n                <Select.Option value=\"\">无接口前缀</Select.Option>\r\n                {prefixList.map((prefix) => {\r\n                  return (\r\n                    <Select.Option value={prefix.code} key={prefix.code}>\r\n                      {prefix.code}\r\n                    </Select.Option>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </Form.Item>\r\n          ) : (\r\n            <ul>\r\n              <li>{detailFormData.prefix}</li>\r\n            </ul>\r\n          )}\r\n\r\n          <h4>接口地址</h4>\r\n          {props.drawerType !== \"look\" ? (\r\n            <Form.Item\r\n              name=\"path\"\r\n              rules={[{ required: true, message: \"请输入接口地址!\" }]}\r\n            >\r\n              <Input autoComplete=\"off\" />\r\n            </Form.Item>\r\n          ) : (\r\n            <ul>\r\n              <li>{detailFormData.path}</li>\r\n            </ul>\r\n          )}\r\n        </Form>\r\n      </Col>\r\n      {/* 代码编辑与预览 */}\r\n      <Col span={14} className=\"pl-10\">\r\n        <h4>\r\n          <span className=\"mr-10\">响应数据</span>\r\n          {props.drawerType !== \"look\" ? (\r\n            <a href=\"#!\" style={{ color: \"#6c757d\" }}>\r\n              如何生成随机数据?\r\n            </a>\r\n          ) : null}\r\n        </h4>\r\n        {props.drawerType !== \"look\" ? (\r\n          <div className=\"clearfix\">\r\n            <Radio.Group\r\n              className=\"float-left\"\r\n              defaultValue=\"1\"\r\n              size=\"small\"\r\n              buttonStyle=\"solid\"\r\n              onChange={(e) =>\r\n                e.target.value === \"1\" ? setIsEdit(true) : setIsEdit(false)\r\n              }\r\n            >\r\n              <Radio.Button value=\"1\">编辑</Radio.Button>\r\n              <Radio.Button value=\"2\">预览</Radio.Button>\r\n            </Radio.Group>\r\n            <div className=\"float-right\">\r\n              <span className=\"mr-10\">快捷数据模版:</span>\r\n              <Select\r\n                defaultValue=\"\"\r\n                style={{ width: 200 }}\r\n                size=\"small\"\r\n                onChange={changeBaseData}\r\n              >\r\n                <Option value=\"\">不使用响应数据模版</Option>\r\n                {baseDataList.map((baseData, index) => {\r\n                  return (\r\n                    <Option value={index} title={baseData.name} key={index}>\r\n                      {baseData.name}\r\n                    </Option>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n\r\n        <div className=\"pt-10\">\r\n          <div\r\n            style={{\r\n              display: props.drawerType !== \"look\" && isEdit ? \"block\" : \"none\",\r\n            }}\r\n          >\r\n            <Ace ref={aceRef} height=\"400px\"></Ace>\r\n          </div>\r\n          <div\r\n            style={{\r\n              display:\r\n                props.drawerType === \"look\" || !isEdit ? \"block\" : \"none\",\r\n            }}\r\n          >\r\n            <TextArea\r\n              value={mockData}\r\n              style={{ height: \"400px\", backgroundColor: \"#f2f2f2\" }}\r\n              readOnly\r\n            />\r\n          </div>\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nHandleInterface = forwardRef(HandleInterface);\r\n","import { message } from \"antd\";\n\nexport function copyText(text) {\n  var currentFocus = document.activeElement; // 保存当前活动节点\n\n  let input = document.createElement(\"input\"); // 创建一个input标签\n  document.body.appendChild(input); // 把标签添加给body\n  input.style.opacity = 0; //设置input标签设置为透明(不可见)\n  input.value = text; // 把需要复制的值放到input上\n\n  // 记录当前滚动位置, 因为添加节点并选中的时候回影响页面滚动\n  let scrollY = window.scrollY;\n\n  input.focus(); // input节点获取焦点\n  input.setSelectionRange(0, input.value.length); // 选中input框中的所有文字\n\n  document.execCommand(\"copy\", true); // 复制文字并获取结果\n\n  currentFocus.focus(); // 之前活动节点获得焦点\n  document.body.removeChild(input); // 删除添加的input节点\n\n  // 页面滚动到之前位置\n  window.scrollTo(0, scrollY);\n\n  message.info(\"已复制到粘贴板\");\n}","import React, { useEffect, useState, useRef } from \"react\";\nimport Axios from \"axios\";\nimport {\n  Table,\n  message,\n  Button,\n  Modal,\n  Popconfirm,\n  Space,\n  Row,\n  Col,\n  Form,\n  Input,\n} from \"antd\";\nimport { DeleteOutlined, EditOutlined } from \"@ant-design/icons\";\nimport { Ace } from \"../base/ace\";\nimport JSON5 from \"json5\";\nimport { mock } from \"mockjs\";\n\nconst { TextArea } = Input;\n\nexport function BaseData() {\n  const [dataSource, setDataSource] = useState([]);\n  const [visible, setVisible] = useState(false);\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const [handleId, setHandleId] = useState(null);\n  const aceRef = useRef(null);\n  const [form] = Form.useForm();\n\n  const columns = [\n    {\n      title: \"序号\",\n      width: 70,\n      align: \"center\",\n      render: (text, record, index) => `${index + 1}`,\n    },\n    {\n      title: \"名称\",\n      dataIndex: \"name\",\n      key: \"name\",\n    },\n    {\n      title: \"说明\",\n      dataIndex: \"remark\",\n      key: \"remark\",\n    },\n    {\n      title: \"操作\",\n      width: 270,\n      align: \"center\",\n      render: (text, record, index) => (\n        <Space>\n          <Button\n            size=\"small\"\n            onClick={() => editBaseData(record._id)}\n            type=\"primary\"\n            icon={<EditOutlined />}\n          >\n            编辑\n          </Button>\n          <Popconfirm\n            title=\"您确定要删除该模板数据吗?\"\n            onConfirm={() => {\n              deleteBaseData(record._id);\n            }}\n            okText=\"确定\"\n            cancelText=\"不删了\"\n          >\n            <Button size=\"small\" danger icon={<DeleteOutlined />}>\n              删除\n            </Button>\n          </Popconfirm>\n        </Space>\n      ),\n    },\n  ];\n\n  useEffect(() => {\n    if (!handleId || !visible) return;\n\n    Axios.post(\"/api/get-base-data-by-id\", { id: handleId }).then((res) => {\n      if (res.data.success) {\n        form.setFieldsValue({\n          name: res.data.data.name,\n          remark: res.data.data.remark,\n        });\n        aceRef.current.editor.setValue(JSON5.parse(res.data.data.aceData));\n      } else {\n        message.error(res.data.errorMsg);\n      }\n    });\n  }, [handleId, form, visible]);\n\n  const editBaseData = (id) => {\n    setHandleId(id);\n    setVisible(true);\n  };\n\n  const deleteBaseData = (id) => {\n    Axios.post(\"/api/delete-base-data\", { id }).then((res) => {\n      if (res.data.success) {\n        message.success(\"删除成功\");\n        getList();\n      } else {\n        message.error(res.data.errorMsg);\n      }\n    });\n  };\n\n  const getList = () => {\n    Axios.get(\"/api/get-base-list\").then((res) => {\n      if (res.data.success) {\n        setDataSource(res.data.data);\n      } else {\n        message.error(res.data.errorMsg);\n      }\n    });\n  };\n\n  useEffect(() => {\n    getList();\n  }, []);\n\n  // 获取响应数据\n  const jsonValue = () => {\n    if (!aceRef.current.getValue()) {\n      message.error(\"请输入响应数据\");\n      return false;\n    }\n    try {\n      return JSON5.parse(aceRef.current.getValue());\n    } catch (reason) {\n      console.log(reason);\n      message.error(\"json 解析出错\");\n      return false;\n    }\n  };\n\n  const handleOk = () => {\n    form\n      .validateFields()\n      .then((values) => {\n        const jsonData = jsonValue();\n        if (!jsonData) return;\n        const param = {\n          name: values.name,\n          remark: values.remark,\n          data: mock(jsonData),\n          aceData: JSON5.stringify(aceRef.current.getValue()),\n        };\n        if (handleId) {\n          // 编辑\n          param.id = handleId;\n        }\n        setConfirmLoading(true);\n        Axios.post(\"/api/update-base-data\", param).then((res) => {\n          if (res.data.success) {\n            form.resetFields();\n            setConfirmLoading(false);\n            aceRef.current.editor.setValue(\"\");\n            message.success(\"保存成功\");\n            getList();\n            setVisible(false);\n          } else {\n            message.error(res.data.errorMsg);\n          }\n        });\n      })\n      .catch((reason) => console.log(reason));\n  };\n  return (\n    <div>\n      <div className=\"pb-10\">\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            setVisible(true);\n            setHandleId(null);\n          }}\n        >\n          新增\n        </Button>\n        <span className=\"float-right\">设置响应数据, 可在新建接口时快捷选择对应的数据模版显示在编辑器内</span>\n      </div>\n      <Table\n        dataSource={dataSource}\n        columns={columns}\n        rowKey={(record) => record._id}\n        pagination={false}\n      />\n      <Modal\n        title=\"新增响应数据\"\n        visible={visible}\n        onOk={handleOk}\n        onCancel={() => {\n          form.resetFields();\n          setConfirmLoading(false);\n          aceRef.current.editor.setValue(\"\");\n          setVisible(false);\n        }}\n        centered={true}\n        confirmLoading={confirmLoading}\n        forceRender={true}\n        width={900}\n      >\n        <Row>\n          <Col span={8} className=\"pr-10\">\n            <Form\n              form={form}\n              name=\"basic\"\n              layout=\"vertical\"\n              initialValues={{\n                name: \"\",\n                remark: \"\",\n              }}\n            >\n              <Form.Item\n                label=\"名称\"\n                name=\"name\"\n                rules={[{ required: true, message: \"请输入名称\" }]}\n              >\n                <Input />\n              </Form.Item>\n\n              <Form.Item label=\"说明\" name=\"remark\">\n                <TextArea autoComplete=\"off\" />\n              </Form.Item>\n            </Form>\n          </Col>\n          <Col span={16}>\n            <h4>响应数据</h4>\n            <Ace ref={aceRef} height=\"340px\"></Ace>\n          </Col>\n        </Row>\n      </Modal>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport Axios from \"axios\";\nimport { Table, message, Button, Modal, Form, Input, Popconfirm } from \"antd\";\nimport { DeleteOutlined } from \"@ant-design/icons\";\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\nexport function Prefix() {\n  const [dataSource, setDataSource] = useState([]);\n  const [visible, setVisible] = useState(false);\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const [form] = Form.useForm();\n\n  const deletePrefix = (id) => {\n    Axios.post(\"/api/delete-prefix\", { id: id }).then((res) => {\n      if (res.data.success) {\n        message.success(\"删除成功\");\n        getList();\n      } else {\n        message.error(res.data.errorMsg);\n      }\n    });\n  };\n\n  const columns = [\n    {\n      title: \"序号\",\n      width: 70,\n      align: \"center\",\n      render: (text, record, index) => `${index + 1}`,\n    },\n    {\n      title: \"前缀\",\n      dataIndex: \"code\",\n      key: \"code\",\n    },\n    {\n      title: \"说明\",\n      dataIndex: \"remark\",\n      key: \"remark\",\n    },\n    {\n      title: \"操作\",\n      width: 270,\n      align: \"center\",\n      render: (text, record, index) => (\n        <Popconfirm\n          title=\"您确定要删除该前缀吗?\"\n          onConfirm={() => {\n            deletePrefix(record._id);\n          }}\n          okText=\"确定\"\n          cancelText=\"不删了\"\n        >\n          <Button size=\"small\" danger icon={<DeleteOutlined />}>\n            删除\n          </Button>\n        </Popconfirm>\n      ),\n    },\n  ];\n\n  const getList = () => {\n    Axios.get(\"/api/get-prefix-list\").then((res) => {\n      if (res.data.success) {\n        setDataSource(res.data.data);\n      } else {\n        message.error(res.data.errorMsg);\n      }\n    });\n  };\n\n  useEffect(() => {\n    getList();\n  }, []);\n\n  const handleOk = () => {\n    form\n      .validateFields()\n      .then((values) => {\n        const param = {\n          code: values.code.startsWith(\"/\") ? values.code : `/${values.code}`,\n          remark: values.remark,\n        };\n        setConfirmLoading(true);\n        Axios.post(\"/api/add-prefix\", param).then((res) => {\n          if (res.data.success) {\n            setConfirmLoading(false);\n            form.resetFields();\n            setVisible(false);\n            getList();\n          } else {\n            message.error(res.data.errorMsg);\n          }\n        });\n      })\n      .catch((reason) => console.log(reason));\n  };\n\n  return (\n    <div>\n      <div className=\"pb-10\">\n        <Button type=\"primary\" onClick={() => setVisible(true)}>\n          新增\n        </Button>\n        <span className=\"float-right\">本页面删除前缀不会影响现有接口在用的前缀, 只会影响新增或编辑接口时可选的前缀列表选项</span>\n      </div>\n      <Table\n        dataSource={dataSource}\n        columns={columns}\n        rowKey={(record) => record._id}\n        pagination={false}\n      />\n      <Modal\n        title=\"新增前缀\"\n        visible={visible}\n        onOk={handleOk}\n        onCancel={() => setVisible(false)}\n        centered={true}\n        confirmLoading={confirmLoading}\n      >\n        <Form\n          form={form}\n          {...layout}\n          name=\"basic\"\n          initialValues={{\n            code: \"\",\n            delay: 200,\n          }}\n        >\n          <Form.Item\n            label=\"前缀\"\n            name=\"code\"\n            rules={[{ required: true, message: \"请输入接口前缀\" }]}\n          >\n            <Input />\n          </Form.Item>\n\n          <Form.Item label=\"说明\" name=\"remark\">\n            <Input autoComplete=\"off\" />\n          </Form.Item>\n        </Form>\n      </Modal>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\r\nimport { Form, Input, Button, Radio, message } from \"antd\";\r\nimport Axios from \"axios\";\r\n\r\nconst layout = {\r\n  labelCol: { span: 3 },\r\n  wrapperCol: { span: 8 },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 3, span: 8 },\r\n};\r\nexport function Project() {\r\n  const [form] = Form.useForm();\r\n\r\n  const [configId, setConfigId] = useState(null);\r\n  useEffect(() => {\r\n    Axios.get(\"/api/get-config\").then((res) => {\r\n      if (res.data.success) {\r\n        if (!res.data.data.target) return;\r\n        form.setFieldsValue({\r\n          target: res.data.data.target,\r\n          delay: res.data.data.delay,\r\n          changeOrigin: res.data.data.changeOrigin,\r\n        });\r\n        setConfigId(res.data.data._id);\r\n      } else {\r\n        message.error(res.data.errorMsg);\r\n      }\r\n    });\r\n  }, [setConfigId, form]);\r\n\r\n  const onFinish = (values) => {\r\n    console.log(\"Success:\", values);\r\n    const param = {\r\n      target: values.target,\r\n      delay: values.delay,\r\n      id: configId,\r\n      changeOrigin: values.changeOrigin,\r\n    };\r\n    Axios.post(\"/api/update-config\", param).then((res) => {\r\n      if (res.data.success) {\r\n        message.success(\"保存成功\");\r\n      } else {\r\n        message.error(res.data.errorMsg);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-20\">\r\n      <Form\r\n        form={form}\r\n        {...layout}\r\n        name=\"basic\"\r\n        initialValues={{\r\n          changeOrigin: false,\r\n          delay: 200,\r\n        }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n      >\r\n        <Form.Item\r\n          label=\"代理地址\"\r\n          name=\"target\"\r\n          rules={[{ required: true, message: \"请输入项目代理地址\" }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"响应延时\"\r\n          name=\"delay\"\r\n          rules={[{ required: true, message: \"请输入Mock接口响应延时!\" }]}\r\n        >\r\n          <Input autoComplete=\"off\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"变更来源\" name=\"changeOrigin\">\r\n          <Radio.Group>\r\n            <Radio value={true}>变更</Radio>\r\n            <Radio value={false}>不变更</Radio>\r\n          </Radio.Group>\r\n        </Form.Item>\r\n\r\n        <Form.Item {...tailLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            保存\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n","import { Home } from \"./pages/home\";\r\nimport { BaseData } from \"./pages/base-data\";\r\nimport { Prefix } from \"./pages/prefix\";\r\nimport { Project } from \"./pages/project\";\r\nimport { Document } from \"./pages/document\";\r\n\r\nexport const routes = [\r\n  {\r\n    path: \"/\",\r\n    component: Home,\r\n    exact: true,\r\n    title: \"接口列表\"\r\n  },\r\n  {\r\n    path: \"/base-data\",\r\n    component: BaseData,\r\n    title: \"响应数据维护\"\r\n    // routes: [\r\n    //   {\r\n    //     path: \"/tacos/bus\",\r\n    //     component: Bus\r\n    //   }\r\n    // ]\r\n  },\r\n  {\r\n    path: \"/prefix\",\r\n    component: Prefix,\r\n    title: \"接口前缀维护\"\r\n  },\r\n  {\r\n    path: \"/project\",\r\n    component: Project,\r\n    title: \"项目配置维护\"\r\n  },\r\n  {\r\n    path: \"/document\",\r\n    component: Document,\r\n    title: \"文档说明\"\r\n  },\r\n];\r\n","import React from 'react';\r\n\r\nexport function Document() {\r\n  return (\r\n    <div>Document</div>\r\n  )\r\n}","import React, { Fragment } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Menu } from \"antd\";\nimport { routes } from \"../router\";\n\nfunction Header(props) {\n  let count = '1';\n  for (let i = 0; i < routes.length; i++) {\n    if (routes[i].path === props.history.location.pathname) {\n      count = `${i + 1}`\n    }\n  }\n  return (\n    <Fragment>\n      <div style={{ float: 'left', fontSize: '20px', marginRight: '20px', height: '64px' }} >SNAKE-API <small>mini</small></div>\n      <Menu mode=\"horizontal\" defaultSelectedKeys={[count]} className=\"float-left\">\n        <Menu.Item key=\"1\">\n          <Link to=\"/\">接口列表</Link>\n        </Menu.Item>\n        <Menu.Item key=\"2\">\n          <Link to=\"/base-data\">响应数据维护</Link>\n        </Menu.Item>\n        <Menu.Item key=\"3\">\n          <Link to=\"/prefix\">接口前缀维护</Link>\n        </Menu.Item>\n        <Menu.Item key=\"4\">\n          <Link to=\"/project\">项目配置维护</Link>\n        </Menu.Item>\n        <Menu.Item key=\"5\">\n          <Link to=\"/document\">文档说明</Link>\n        </Menu.Item>\n      </Menu>\n      <div className=\"float-right\">\n        <a href=\"https://www.snake-api.com\" rel=\"noopener noreferrer\" target=\"_blank\" className=\"mr-20\">SNAKE-API 官网</a>\n        <a href=\"https://gitee.com/seebin/mock-data/\" rel=\"noopener noreferrer\" target=\"_blank\">\n          <img src='https://gitee.com/seebin/mock-data/badge/star.svg?theme=dark' alt='star'></img>\n        </a>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default withRouter(Header);\n","import React from \"react\";\r\nimport { Breadcrumb } from \"antd\";\r\n\r\nexport default function Content(props) {\r\n  const warp = {\r\n    padding: \"66px 20px 0 20px\",\r\n    minHeight: \"calc(100vh - 42px)\",\r\n  };\r\n  return (\r\n    <div style={warp}>\r\n      <Breadcrumb style={{ padding: \"10px 0\" }}>\r\n        <Breadcrumb.Item>接口列表</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport SnakeHeader from \"./base/header\";\r\nimport SnakeContent from \"./base/content\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { routes } from \"./router\";\r\nimport { Layout } from \"antd\";\r\n\r\nconst { Header, Footer, Content } = Layout;\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Layout>\r\n        <Header\r\n          className=\"header\"\r\n          style={{\r\n            position: \"fixed\",\r\n            zIndex: 1,\r\n            width: \"100%\",\r\n            padding: \"0 20px\",\r\n          }}\r\n        >\r\n          <SnakeHeader />\r\n        </Header>\r\n        <Content>\r\n          <SnakeContent>\r\n            <Switch>\r\n              {routes.map((route, i) => (\r\n                <RouteWithSubRoutes key={route.path} {...route} />\r\n              ))}\r\n            </Switch>\r\n          </SnakeContent>\r\n        </Content>\r\n        <Footer style={{ textAlign: \"center\", padding: \"10px\" }}>\r\n          技术支持：seebin | 钉钉交流群:21958681\r\n        </Footer>\r\n      </Layout>\r\n    </Router>\r\n  );\r\n}\r\n\r\nfunction RouteWithSubRoutes(route) {\r\n  document.title = route.title;\r\n  return (\r\n    <Route\r\n      exact={route.exact}\r\n      path={route.path}\r\n      render={(props) => (\r\n        // pass the sub-routes down to keep nesting\r\n        <route.component {...props} routes={route.routes} />\r\n      )}\r\n    />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { ConfigProvider } from \"antd\";\r\nimport zhCN from \"antd/es/locale/zh_CN\";\r\n\r\nReactDOM.render(\r\n  <ConfigProvider locale={zhCN}>\r\n    <App />\r\n  </ConfigProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}